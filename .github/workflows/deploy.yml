name: CloudWatch Logs Subscription Filter lambda function deploy

on:
  push:
    branches:
      - main
    paths:
      - subscription_filter.py
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Install Poetry and Plugins
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"
        poetry self add poetry-plugin-export
        poetry --version
    
    - name: Install Dependencies and Create Layer
      run: |
        mkdir -p ./layer/python
        poetry export -f requirements.txt --without-hashes | pip install -r /dev/stdin -t ./layer/python
        cd ./layer && zip -r ../lambda_layer.zip . && cd ..
    
    - name: Debug ZIP File
      run: |
        ls -l ./layer/python
        unzip -l lambda_layer.zip

    
    - name: Get Lambda Layer Name from Parameter Store
      id: get-layer-name
      run: |
        LAYER_NAME=$(aws ssm get-parameter --name "/remember-me/python_lambda_layer_name" --query 'Parameter.Value' --output text)
        echo "LAYER_NAME=$LAYER_NAME" >> $GITHUB_ENV

    - name: Install Dependencies and Create Layer
      run: |
        mkdir -p ./layer/python
        # Install dependencies into layer directory
        poetry export -f requirements.txt --without-hashes | pip install -r /dev/stdin -t ./layer/python
        cd ./layer && zip -r ../lambda_layer.zip . && cd ..
    
    - name: Update Lambda Layer
      run: |
        LAYER_VERSION_ARN=$(aws lambda publish-layer-version \
          --layer-name "$LAYER_NAME" \
          --zip-file fileb://lambda_layer.zip \
          --compatible-runtimes python3.12 \
          --query 'LayerVersionArn' \
          --output text)
        echo "LAYER_VERSION_ARN=$LAYER_VERSION_ARN" >> $GITHUB_ENV
    
    - name: Update Layer ARN in Parameter Store
      run: |
        aws ssm put-parameter --name "/remember-me/python_lambda_layer_arn" --type "String" --value "$LAYER_VERSION_ARN" --overwrite

    - name: Zip Lambda Function
      run: |
        mkdir -p ./templates/lambda
        zip -j ./templates/lambda/lambda_code.zip subscription_filter.py
    
    - name: Update Lambda Function Code
      run: |
        aws lambda update-function-code \
          --function-name subscription_filter \
          --zip-file fileb://./templates/lambda/lambda_code.zip

    # Lambda 함수에 새로운 레이어 버전 적용
    - name: Get Lambda Layer ARN from Parameter Store
      run: |
        LAYER_VERSION_ARN=$(aws ssm get-parameter --name "/remember-me/python_lambda_layer_arn" --query 'Parameter.Value' --output text)
        echo "LAYER_VERSION_ARN=$LAYER_VERSION_ARN" >> $GITHUB_ENV

    - name: Update Lambda Function Configuration
      run: |
        aws lambda update-function-configuration \
          --function-name subscription_filter \
          --layers "$LAYER_VERSION_ARN"
